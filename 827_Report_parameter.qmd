---
params:
  substance: "HG"
execute:
  echo: false
format: 
  pdf:
    toc: false
    number-sections: false
    colorlinks: true
    margin-left: 2cm
    margin-right: 1cm

editor: visual
---

# `r params$substance` {style="text-align: center;"}

```{r}
#| label: 010_packages_source
#| results: hide
#| message: false
#| warning: false

library(dplyr)
# library(tidyr)
library(ggplot2)
library(lubridate)
library(flextable)
# library(glue)
library(readxl)
library(purrr)
library(leftcensored)   # DHJ's package (https://github.com/DagHjermann/leftcensored)
library(scico)          # colour palettes incl. "Vik" (https://github.com/thomasp85/scico)

library(ggiraph)
library(cowplot)

# library(safejoin) # https://github.com/moodymudskipper/safejoin

# source("01_Get_chemical_data_NIVAbasen_functions.R")  # for get_standard_parametername()
source("824_Report_for_scientists_functions.R")
source("825_Report_paramgroup_functions.R", encoding = "UTF-8")
```

```{r}
#| label: 020_get_data
#| cache: true 
#| warning: true

# chem_params <- get_parametervalues(params$chemical_group)
chem_params <- params$substance

# debugonce(get_data_tables)
dat_sample_fish <- get_data_parameter(params$substance, "fish")
dat_sample_muss <- get_data_parameter(params$substance, "mussel")

dat_median <- get_medians(dat_sample_fish, dat_sample_muss)

dat_median_fish <- dat_median %>%
  filter(LATIN_NAME %in% c("Gadus morhua", "Platichthys flesus"))
dat_median_mussel <- dat_median %>%
  filter(LATIN_NAME %in% c("Mytilus edulis"))

```

```{r}

fn <- paste("Data/824_trend_results/Trends", params$substance, "Gadus morhua.rds")
trend_obj_cod <- readRDS(fn)  

purrr::pluck(trend_obj_cod, 1) %>% str(1)
purrr::pluck(trend_obj_cod, 1, 1, "slope")
purrr::pluck(trend_obj_cod, 1, 1, "result")
purrr::pluck(trend_obj_cod, 1, 1, "result", "slope")

slope_short <- map_df(trend_obj_cod[[1]], c("result", "slope"))
slope_short <- map_df(trend_obj_cod[[2]], c("result", "slope"))

trend_obj_cod[[1]][c(1,3)]

str(X, 1)
str(X[[1]], 1)
str(X[[1]][[1]], 1)
str(X[[1]][[1]])

# test

# trendobj2 <- get_trendobj_station("56A", dat_sel_medium, firstyear = 2011)

```

```{r}
#| warning: false

# Safe version (doesn't stop the procedure when there is an error)  
# see ?safely for explnation  
get_trendobj_station_s <- purrr::safely(get_trendobj_station)

# Vector of stations
stations <- unique(dat_median_fish$Station) %>% 
  set_names() # set names of 'stations' to stations (will be carried over to 'trend_results')

# Filename for saving
fn <- paste0("Trends ", unique(dat_sel_medium$PARAM), " ", species_category, ".rds")
fn_full <- paste0("Data/824_trend_results/", fn)

file_exists <- fn %in% dir("Data/824_trend_results")

# If file of results exists, reada it; otherwise, perform anlysis and write it  
if (file_exists){
  trend_results <- readRDS(fn_full)
} else {
  
  # Run all (takes some minutes)
  trend_results <- list()
  trend_results[[1]] <- purrr::map(stations, get_trendobj_station_s, data = dat_sel_medium)
  trend_results[[2]] <- purrr::map(stations, get_trendobj_station_s, data = dat_sel_medium, firstyear = 2011)

  saveRDS(trend_results, fn_full)
  
}

```

```{r}
get_trendobj_station <- function(station, data, 
                                 keep = c("intercept", "slope", "plot_data"),
                                 several_series_is_error = TRUE,
                                 ...
                                 ){   
  data_select <- milkys_select_rows(station = station, data = data) 
  
  check <- unique(data_select$PARAM)
  if (length(check) > 1 & several_series_is_error){
    stop("Series contains several parameters: ", paste(check, collapse = ", "))
  }
  check <- unique(data_select$LATIN_NAME)
  if (length(check) > 1 & several_series_is_error){
    stop("Series contains several species: ", paste(check, collapse = ", "))
  }
  check <- unique(data_select$TISSUE_NAME)
  if (length(check) > 1 & several_series_is_error){
    stop("Series contains several tissues: ", paste(check, collapse = ", "))
  }

  # trendobj_complete <- get_trend_cens(data_select, ...) 
  trendobj_complete <- get_trend(
    station = station,
    species = unique(data_select$TISSUE_NAME), 
    param = unique(data_select$PARAM), 
    tissue = unique(data_select$TISSUE_NAME), 
    data = data_select, 
    ...) 
  # data_select
  
  if ("all" %in% keep){
    result <- trendobj_complete
  } else {
    result <- trendobj_complete[keep]
  }
  
  result
  
}
```

```{r}
debugonce(get_trend)
debugonce(milkys_select_rows)

debugonce(get_trendobj_station)
trendobj1 <- get_trendobj_station("56A", dat_median_mussel, firstyear = 2012)

trendobj1 <- get_trendobj_station("56A", dat_median)

trendobj1 <- get_trendobj_station(station = "30B", data = dat_median_fish, firstyear= 2000)
# trendobj1 <- get_trendobj_station(station = "56A", data = dat_median_mussel)
```

## Overview

```{r}
#| fig-width: 10
#| fig-height: 5

dat_plot <- dat_median_fish  %>% filter(MYEAR >= (2021-9))
species_category <- "Fish"
tissue <- table(dat_median_fish$TISSUE_NAME) %>% sort() %>% tail(1) %>% names()

cols <- c(RColorBrewer::brewer.pal(6, "Blues")[2],
          RColorBrewer::brewer.pal(6, "YlOrRd")[1:5])
col_func <- function(x){cols[x]}

ggplot(dat_plot, 
       aes(MYEAR, Station, fill = Proref_ratio_WW)) +
  geom_tile() +
  geom_tile(data = subset(dat_plot, Above_EQS %in% "Over"),
            color = "red", size = 1, height = 0.9, width = 0.9) +
  geom_text(aes(label = round(VALUE_WW_med, 3)), nudge_y = -0.1, size = 2) +
  geom_text(aes(label = LOQ_label), size = 2, nudge_y = 0.3) +
  #scale_fill_viridis_b(trans = "log10", breaks = c(0.01,1,2,3,5,10,100), option = "plasma") +
  #scale_fill_binned(breaks = c(0.01,1,2,3,5,10,100)) +
  scale_fill_stepsn(breaks = c(0.01,1,2,3,5,10,100), colours = cols) +
  scale_color_manual(values = c("red", "white")) +
  scale_alpha_manual(values = c(1, 0)) +
  scale_x_continuous(breaks = seq(2006, 2020, 2)) +
  theme_bw() +
  labs(
    title = paste0(params$substance, " in ", species_category, " (", tissue, ")")
  )

```
